- char *get_next_line(int fd) -> NULL/line
- static int i; <- matiene su valor entre llamadas porque está alocada en el heap
- read(fd) <- te devuelve bytes, bucle leer hasta encontrar un /n
- segun BUFFER_SIZE, los bytes de read(fd) pueden devolver más carácteres a partir del salto de línea
- los caracteres leidos con BUFFER_SIZE se guardan en la static, luego se limpia static
- hasta /n es la line a devolver y el resto se queda en static para juntarlo con el proximo BUFFER_SIZE

get_next_line()
{
	- declarar static
	- comprobaciones
	- leer fd
	- crear linea
}

leer fd
{
	- se utiliza un buffer tempral porque read lo sobreescribe, no s epuede usar la static directamente
	- buffer temporal (char *)
	- read (fd, buffer, BUFFER_SIZE)
	- bucle hasta /n 
	- buffer -> static (strjoin)
	- free buffer
}

crear linea
{
	- limpias static
	- line (char *) == static hasta /n 
	- static se queda con el resto
}

main 
{
	open(fd)

	while (get_next_line(fd))
		printf(return (gnl));
}
